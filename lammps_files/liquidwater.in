# LAMMPS input script for TIP4P/2005 water simulation
# Modified to use only fix rigid without shake
# Run with: ~/lammps/bin/lmp -in liquidwater.in
# run: ~/lammps/bin/lmp -in liquidwater.in
# cp /mnt/c/Users/noahs/work/chem5555_Modules3-7/Module_4/liquidwater.in ~/chem5555/
# cp /mnt/c/Users/noahs/work/chem5555_Modules3-7/Module_4/4.4lammps.in ~/chem5555/
# cp /mnt/c/Users/noahs/work/chem5555_Modules3-7/Module_4/tip4p2005.mol ~/chem5555/

# ~/lammps/src/lmp_serial -in liquidwater.in
# ~/lammps/src/lmp_serial -in 4.4lammps.in

units real
atom_style full      # Changed to full for better molecular support
atom_modify map array
boundary p p p

# Create a larger box to fit ~200 water molecules with bond/angle types
region box block -15 15 -15 15 -15 15  # Increased box size
create_box 3 box bond/types 1 angle/types 1  # Specify number of bond and angle types

# Set masses for atom types
mass 1 15.9994  # O
mass 2 1.008    # H
mass 3 1.0e-8   # M (very small mass instead of zero)

# Use the molecule file's bonds/angles directly for stability
bond_style harmonic
bond_coeff 1 5000.0 0.9572  # O-H bond from TIP4P/2005
angle_style harmonic
angle_coeff 1 500.0 104.52  # H-O-H angle from TIP4P/2005

# Create water molecules with their bond/angle structure
# Try different path formats depending on your environment
molecule water tip4p2005.mol    # If file is in same directory as script
# molecule water /mnt/c/Users/noahs/work/chem5555_Modules3-7/Module_4/tip4p2005.mol    # For WSL
# molecule water "C:/Users/noahs/work/chem5555_Modules3-7/Module_4/tip4p2005.mol"      # For Windows

create_atoms 0 random 150 34564 NULL mol water 25367 overlap 2.0
neigh_modify exclude molecule/intra all

# Initial minimization to resolve bad contacts
minimize 1.0e-4 1.0e-6 1000 10000

# Switch to TIP4P/2005 parameters with Ewald
pair_style lj/cut/coul/long 10.0
pair_coeff 1 1 0.1852 3.1589  # O-O TIP4P/2005 parameters
pair_coeff 2 2 0.0 0.0        # H-H
pair_coeff 3 3 0.0 0.0        # M-M
kspace_style pppm 1.0e-4      # Ewald method for long-range forces

# Group molecules properly
group water type 1 2 3

# Apply rigid constraints with a more stable approach
fix rigid water rigid/small molecule
timestep 2.0  # Now use the required 2fs timestep

# Count and report the number of water molecules
variable nmols equal count(all)/4
print "System contains ${nmols} water molecules"

# Initialize velocities for ambient conditions (300K)
velocity all create 300.0 12345 dist gaussian

# Setup output for energy analysis
thermo_style custom step temp press etotal density pe ke
thermo 100
thermo_modify flush yes

# Output energy to file for plotting conservation
fix energy all print 100 "$(step) $(etotal)" file energy.log screen no

# Equilibration phase: 2fs timestep, 10ps with rescaling every 100fs
fix 1 all nve
fix 2 all temp/rescale 50 300.0 300.0 0.1 1.0  # 50 steps × 2fs = 100fs
run 5000  # 5000 steps × 2fs = 10ps

# Unfix temperature rescaling for production
unfix 2

# Production run in NVE to test energy conservation
dump 1 all atom 1000 water.lammpstrj
dump_modify 1 sort id
restart 5000 restart.water
run 5000  # Additional 10ps production run

# Save final configuration
write_data water_equil.data nocoeff

print "Simulation complete."
print "Energy data saved to energy.log for conservation analysis."
print "Run 'julia plot_lammps.jl' to analyze energy conservation."
